#!/usr/bin/env ruby

# Convert an AdBlock Plus whitelist file to a PiHole-compatible whitelist.txt file

require 'optparse'
require 'net/http'
require 'uri'

class String; alias starts_with? start_with?; end

class PiholeWhitelistConverter

  def initialize(input_file, format = :abp)
    @input_file = input_file
    @format = format
  end

  def convert
    lines = []

    input_content.each_line do |line|
      next if line.starts_with?('!') # comment line

      if line.starts_with?("@@") # exception line
        match = line.match(/\|\|(.*)\$/)
        if match
          domain = match[1].sub('^*', '')
          lines << domain
        end
      end
    end

    lines.join("\n")
  end


  private

  def input_content
    @input_content ||= if @input_file.starts_with?('http')
      read_url(@input_file)
    else
      read_file(@input_file)
    end
  end

  def read_file(file_name)
    file = File.open(file_name, "r")
    data = file.read
    file.close
    return data
  end

  def read_url(url)
    Net::HTTP.get(URI.parse(url))
  end
end

options = {}

ARGV << '-h' if ARGV.empty?

OptionParser.new do |opts|
  opts.banner = "\nAdBlock Plus to Pihole whitelist converter.\n"

  opts.on("-i", "--input PATH", "Input file path or URL") do |i|
    options[:input_path] = i
  end

  opts.on("-o", "--output", "Path of the output file") do |o|
    options[:output_path] = o
  end

  opts.on("-h", "--help", "Displays help") do
    puts opts
    puts "\n"
    exit
  end
end.parse!

output = PiholeWhitelistConverter.new(options[:input_path], :abp).convert

if options[:output_path]
  f = File.new(options[:output_path], 'w')
  f.write(output)
  f.close
  puts "#{output.lines.count} entries saved to #{options[:output_path]}."
else
  puts output
end
